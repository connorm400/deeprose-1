;; pablo variables

(def {True} 1)
(def {False} 0)
(def {otherwise} 1) ; dont know how usefull this will be besides switch statements

;; pablo functions

(def {defn} (\ {name args body} 
    {def name (\ args body)}))

;; inline
; (def {defn} (\ {name args body} {def name (\ args body)}))

(defn {apply} {fn xs & rst}
    {eval (join (list fn) xs rst)})

;; since I'm using arrays rather than linked lists theres no reason
;; to have a builtin cons function - they would both be O(n)
(defn {cons} {x xs}
    {join (list x) xs})


(defn {inc} {n} {+ n 1})
(defn {dec} {n} {- n 1})

(defn {next} {xs}
    {first (rest xs)})

(defn {<=} {a b}
    {or (< a b)
        (= a b)})


(defn {>=} {a b}
    {or (> a b)
        (= a b)})


(defn {fib} {n}
    {if (<= n 1)
        {n}
        {+ (fib (- n 1)) (fib (- n 2))}})


(defn {nth} {n l}
    {if (> n 1)
        {nth (dec n) (rest l)}
        {eval (first l)}})

